{"version":3,"sources":["components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["TodoList","useState","task","isCompleted","todos","setTodo","setTask","class","onSubmit","event","preventDefault","type","value","placeholder","onChange","target","map","todo","index","onClick","newTodos","window","confirm","splice","handleRemoveTask","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MA4DeA,MA1Df,WAEI,IAWA,EAAyBC,mBAXJ,CACjB,CACIC,KAAM,QACNC,aAAa,GAEjB,CACID,KAAM,QACNC,aAAa,KAIrB,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAwBJ,mBAAS,IAAjC,mBAAOC,EAAP,KAAaI,EAAb,KAsBA,OACI,sBAAKC,MAAM,UAAX,UACI,2CACA,0CACA,yBAASA,MAAM,cAAf,SACI,sBAAMC,SArBG,SAACC,GAClBA,EAAMC,iBACM,KAATR,IACCG,GAAQ,SAAAD,GAAK,4BAAQA,GAAR,CAAe,CAAEF,OAAMC,aAAa,QACjDG,EAAQ,MAiBJ,SACI,uBAAOK,KAAK,OAAOC,MAAQV,EAAOW,YAAY,WAAWC,SA1BnD,SAACL,GACnBH,EAAQG,EAAMM,OAAOH,cA4BjB,yBAASL,MAAM,cAAf,SACI,oBAAIA,MAAM,WAAV,SACMH,EAAMY,KAAI,SAACC,EAAMC,GAAP,OACZ,qBAAIX,MAAM,OAAV,UAA+B,sBAAMA,MAAM,YAAZ,SAA0BU,EAAKf,OAC9D,mBAAGK,MAAM,mBAAmBY,QAAU,kBAtB7B,SAAAD,GACrB,IAAME,EAAQ,YAAOhB,GACJiB,OAAOC,QAAQ,gFAChCF,EAASG,OAAOL,EAAM,GACtBb,EAAQe,GAkBgDI,CAAiBN,QADtCA,cCvC5BO,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c0f5087b.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nfunction TodoList() {\n\n    const initialState = [\n        {\n            task: 'Task1',\n            isCompleted: false\n        },\n        {\n            task: 'Task2',\n            isCompleted: false\n        },\n    ]\n\n    const [todos, setTodo] = useState(initialState);\n    const [task, setTask] = useState('');\n\n    const handleNewTask = (event) => {\n        setTask(event.target.value)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault()\n        if(task === '') return\n            setTodo(todos => [...todos, { task, isCompleted: false }])\n            setTask('')\n    }\n\n    const handleRemoveTask = index => {\n        const newTodos = [...todos]\n        const delateOK = window.confirm('todoを削除してもいいですか？');\n        newTodos.splice(index,1)\n        setTodo(newTodos)\n    }\n\n    \n\n    return (\n        <div class=\"wrapper\">\n            <h1>Todo List</h1>\n            <h2>ADD TASK</h2>\n            <section class=\"common-area\">\n                <form onSubmit={ handleSubmit } >\n                    <input type=\"text\" value={ task } placeholder=\"New Task\" onChange={handleNewTask}/>\n                </form>\n            </section>\n            <section class=\"common-area\">\n                <ul　class=\"todolist\">\n                    { todos.map((todo, index) => (\n                    <li class=\"todo\" key={ index }><span class=\"todo-task\">{ todo.task }</span> \n                    <i class=\"far fa-trash-alt\" onClick={ () => handleRemoveTask(index)}></i>\n                    </li>\n                    ))}\n                </ul>\n            </section>\n        </div>\n        );\n}\n\nexport default TodoList;","import React from 'react';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div>\n      <TodoList/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}